title: "Akums dashboard"
output:
flexdashboard::flex_dashboard:
orientation: rows
source_code: embed
---

library(flexdashboard)
library(knitr)
library(DT)
library(tidyr)
library(rpivotTable)
library(openintro)
library(highcharter)
library(ggvis)
library(dplyr)
library(plotly)
library(ggcorrplot)
```
```{r}
df <- read.csv("/home/akum/Pictures/top2018.csv")
df$hit <- with(df, paste(artists,",", name))
df$key <- as.factor(df$key)
df$mode <- as.factor(df$mode)
df$time_signature <- as.factor(df$time_signature)
```
```{r}
mycolors <- c("blue", "#FFC125", "darkgreen", "darkorange")
```
Key Indicators
Column {data-width=650}
-------------------------------------
### Best Spotify Artist 2018
```{r}
valueBox(df$artists[3],
icon = "fa-user")
```
### **Number of Hits in Top 100**
```{r}
gauge(round(6,
digits = 2),
min = 0,
max = 100,
gaugeSectors(success = c(5, 100),
warning = c(2, 5),
danger = c(0, 2),
colors = c("green", "yellow", "red")))
Row
-------------------------------
## Sound Keys Counts (Pitch Class notation)
`{r}
c <- sum(df$key==0)
c2 <- sum(df$key==1)
d <- sum(df$key==2)
d2 <- sum(df$key==3)
e <- sum(df$key==4)
24 | P a g e
f <- sum(df$key==5)
f2 <- sum(df$key==6)
g <- sum(df$key==7)
g2 <- sum(df$key==8)
a <- sum(df$key==9)
a2 <- sum(df$key==10)
b <- sum(df$key==11)
scale = c(c,c2,d,d2,e,f,f2,g,g2,a,a2,b)
plot_ly(
x = c('C','C#','D','D#','E','F','F#','G','G#','A','A#','B'),
y = scale,
type = "bar",
marker = list(color = 'rgb(102,51,60)',
line = list(color = 'rgb(255,100,45)',
width = 1))) %>%
layout(title = "Keys Indication",
xaxis = list(title = ""),
yaxis = list(title = ""))
### Trak Modality
```{r}
m1 <- sum(df$mode==1)
m2 <- sum(df$mode==2)
plot_ly(df,labels=~mode,
type = "pie"
)
```
### Time Signature (how many beats are in each bar)`{r}
t1 <- sum(df$time_signature==3)
t2 <- sum(df$time_signature==4)
t3 <- sum(df$time_signature==5)
plot_ly(
x = c('3','4','5'),
y = c(t1,t2,t3),
type = "bar"
)
```
Overall Analysis
A narrow row {data-width=350}
--------------------------------
### Artists with most hits in Top 100
```{r}
df %>%
group_by(artists) %>%
summarise(freq = n()) %>%
arrange(desc(freq)) %>%
slice(1:slice(1:10) %>%
ggplot(., aes(reorder(artists, +freq), freq))+
geom_bar(stat = "identity", fill = "#E69F00", col = "black")+
coord_flip()+
labs(x = "" ,y = "Top 10 2018 Artists")+
geom_text(aes(label = freq, y = freq/2))
### Features Correlation
```{r}
df$key <- as.numeric(df$key)
df$mode <- as.numeric(df$mode)
df$time_signature <- as.numeric(df
corr <- round(cor(df[,4:16]), 8)
ggcorrplot(corr)
```
Music Analysis
========================================
### Danceability
```{r}
df %>%
arrange(desc(danceability)) %>%
slice(1:5) %>%
ggplot(., aes(reorder(hit, +danceability), danceability))+
geom_bar(stat = "identity", fill = "royalblue1", col = "grey10")+
coord_flip()+
labs(x = "" ,y = "Score")+
geom_text(aes(label = danceability, y = danceability/2))
```
### Energy
```{r}
df %>%
arrange(desc(energy)) %>%
slice(1:5) %>%
ggplot(., aes(reorder(hit, + energy), energy))+
geom_bar(stat = "identity", fill = "royalblue1", col = "grey10")+
coord_flip()+
labs(x = "" ,y = "Score")+
geom_text(aes(label = energy, y = energy/2))


### Loudness
```{r}
df %>%
arrange(desc(loudness)) %>%
slice(1:5) %>%
ggplot(., aes(reorder(hit, + loudness), loudness))+
geom_bar(stat = "identity", fill = "darkred", col = "red")+
coord_flip()+
labs(x = "" ,y = "Score")+
geom_text(aes(label = loudness, y = loudness/2))
```
datatable(df[,2:16],
caption = "Spotify Top 100 2018",
class = 'cell-border stripe',
rownames = T,
filter = "top",
options = list(pageLength = 25))
rpivotTable(df,
aggregatorName = "Count",
cols= "fm",
rows = "State",
rendererName = "Heatmap")
```